/**
 * DEVELOPMENT WEBPACK CONFIGURATION - CLIENT CONFIGURATION
 */

const path = require('path');

const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const ErrorOverlayPlugin = require('error-overlay-webpack-plugin');
const { ReactLoadablePlugin } = require('react-loadable/webpack');

const config = require('./webpack.dev.babel.js')({
  // Add hot reloading in development
  entry: [
    require.resolve('react-app-polyfill/ie11'),
    'react-hot-loader/patch',
    'webpack-hot-middleware/client?reload=true',
    path.join(process.cwd(), 'app/client.js'), // Start with js/app.js
  ],

  // Don't use hashes in dev mode for better performance
  output: {
    filename: '[name].js',
    chunkFilename: '[name].chunk.js',
  },

  // Emit a source map for easier debugging
  // See https://webpack.js.org/configuration/devtool/#devtool
  devtool: 'cheap-module-source-map',
});

config.plugins.push.apply(config.plugins, [
  new ErrorOverlayPlugin(),
  new webpack.ProvidePlugin({
    // make fetch available
    fetch: 'exports-loader?self.fetch!whatwg-fetch',
  }),
  new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
  new HtmlWebpackPlugin({
    inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
    template: 'app/index.html',
  }),
  new ReactLoadablePlugin({
    filename: './build/react-loadable.json',
  }),
]);

module.exports = config;
